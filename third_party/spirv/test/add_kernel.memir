#loc = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":29:0)
#loc8 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":51:17)
#map = affine_map<(d0) -> (d0)>
module {
  func.func @add_kernel(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":29:0), %arg1: memref<*xf32> {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":29:0), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":29:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":29:0)) {
    %c1024 = arith.constant 1024 : index loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %block_id_x = gpu.block_id  x loc(#loc2)
    %0 = arith.index_cast %block_id_x : index to i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = arith.index_cast %1 : i32 to index loc(#loc4)
    %reinterpret_cast = memref.reinterpret_cast %arg0 to offset: [%2], sizes: [1024], strides: [1] : memref<*xf32> to memref<1024xf32, strided<[1], offset: ?>> loc(#loc4)
    %alloc = memref.alloc() : memref<1024xf32> loc(#loc5)
    %3 = arith.addi %2, %c1024 : index loc(#loc5)
    %4 = arith.index_cast %arg3 : i32 to index loc(#loc5)
    %5 = arith.minsi %3, %4 : index loc(#loc5)
    %6 = arith.maxsi %5, %2 : index loc(#loc5)
    %7 = arith.subi %6, %2 : index loc(#loc5)
    %subview = memref.subview %reinterpret_cast[0] [%7] [1] : memref<1024xf32, strided<[1], offset: ?>> to memref<?xf32, strided<[1], offset: ?>> loc(#loc5)
    %subview_0 = memref.subview %alloc[0] [%7] [1] : memref<1024xf32> to memref<?xf32, strided<[1]>> loc(#loc5)
    memref.copy %subview, %subview_0 : memref<?xf32, strided<[1], offset: ?>> to memref<?xf32, strided<[1]>> loc(#loc5)
    %reinterpret_cast_1 = memref.reinterpret_cast %arg1 to offset: [%2], sizes: [1024], strides: [1] : memref<*xf32> to memref<1024xf32, strided<[1], offset: ?>> loc(#loc6)
    %alloc_2 = memref.alloc() : memref<1024xf32> loc(#loc7)
    %subview_3 = memref.subview %reinterpret_cast_1[0] [%7] [1] : memref<1024xf32, strided<[1], offset: ?>> to memref<?xf32, strided<[1], offset: ?>> loc(#loc7)
    %subview_4 = memref.subview %alloc_2[0] [%7] [1] : memref<1024xf32> to memref<?xf32, strided<[1]>> loc(#loc7)
    memref.copy %subview_3, %subview_4 : memref<?xf32, strided<[1], offset: ?>> to memref<?xf32, strided<[1]>> loc(#loc7)
    %c0 = arith.constant 0 : index loc(#loc8)
    %c1024_5 = arith.constant 1024 : index loc(#loc8)
    %c1 = arith.constant 1 : index loc(#loc8)
    affine.for %arg4 loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":51:17) = 0 to 1024 {
      %8 = affine.apply #map(%arg4) loc(#loc8)
      %9 = affine.load %alloc[%8] : memref<1024xf32> loc(#loc8)
      %10 = affine.apply #map(%arg4) loc(#loc8)
      %11 = affine.load %alloc_2[%10] : memref<1024xf32> loc(#loc8)
      %12 = affine.apply #map(%arg4) loc(#loc8)
      %13 = affine.load %alloc[%12] : memref<1024xf32> loc(#loc8)
      %14 = affine.apply #map(%arg4) loc(#loc8)
      %15 = arith.addf %9, %11 : f32 loc(#loc8)
      affine.store %15, %alloc[%14] : memref<1024xf32> loc(#loc8)
    } loc(#loc8)
    %reinterpret_cast_6 = memref.reinterpret_cast %arg2 to offset: [%2], sizes: [1024], strides: [1] : memref<*xf32> to memref<1024xf32, strided<[1], offset: ?>> loc(#loc9)
    %subview_7 = memref.subview %alloc[0] [%7] [1] : memref<1024xf32> to memref<?xf32, strided<[1]>> loc(#loc10)
    %subview_8 = memref.subview %reinterpret_cast_6[0] [%7] [1] : memref<1024xf32, strided<[1], offset: ?>> to memref<?xf32, strided<[1], offset: ?>> loc(#loc10)
    memref.copy %subview_7, %subview_8 : memref<?xf32, strided<[1]>> to memref<?xf32, strided<[1], offset: ?>> loc(#loc10)
    return loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":38:24)
#loc3 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":43:24)
#loc4 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":49:24)
#loc5 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":49:16)
#loc6 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":50:24)
#loc7 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":50:16)
#loc9 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":53:26)
#loc10 = loc("/home/ubuntu/triton-spirv/python/tutorials/spirv_demo/01-vector-add.py":53:35)
